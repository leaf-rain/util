package listener

type GoTarget struct {
	PkgName  string
	ConfName string
}

// func (t*GoTarget)ExitJson is called when production json is exited.
func (t *GoTarget) ExitJson(typeStr, valStr string) string {
	//return "package Generated \n type AutoGenerated " + valStr + "\n"
	return "package " + t.PkgName + " \n type " + t.ConfName + valStr + "\n"
}

// func (t*GoTarget)ExitObj is called when production obj is exited.
func (t *GoTarget) PreExitObj(typeStr, valStr string) string {
	return " struct {\n"
}
func (t *GoTarget) ExitObj(typeStr, valStr string, isEnd bool, bIsMap bool) string {
	return valStr + "\n"
}
func (t *GoTarget) PostExitObj(typeStr, valStr string) string {
	//println("##obj",valStr)
	return "}"
}

// func (t*GoTarget)ExitPair is called when production pair is exited.
func (t *GoTarget) ExitPair(index int, keyStr, typeStr, valStr, valType string) (string, string) {
	/*if typeStr=="struct"{
		return captical(stripQuotes(keyStr)) +valStr
	}
	if typeStr=="array"{
		return captical(stripQuotes(keyStr)) +valStr
	}

	*/
	return "", captical(stripQuotes(keyStr)) + " " + valStr + " `json:\"" + stripQuotes(keyStr) + "\"`" //+typeStr
}

// func (t*GoTarget)ExitArr is called when production arr is exited.
func (t *GoTarget) ExitArr(typeStr, valStr string) string {
	if valStr == "" {
		return "[] interface{}"
	}
	//println("##arr",valStr)
	return "[]" + valStr
}

// func (t*GoTarget)ExitValue is called when production value is exited.
func (t *GoTarget) ExitValue(typeStr, valStr string) string {
	if typeStr == "null" {
		return "interface{}"
	}
	return typeStr
}
